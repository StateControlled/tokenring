client {
    # include "common"
    akka {
        # loglevel = "off"
        log-dead-letters = 5
        log-dead-letters-during-shutdown = off
        actor {
            provider = remote
            serializers {
                jackson-json = "akka.serialization.jackson.JacksonJsonSerializer"
            }
            serialization-bindings {
                "application.core.Message" = jackson-json
                "application.core.SalesRecord" = jackson-json
                "application.core.Chunk" = jackson-json
                "application.core.Event" = jackson-json
                "application.core.Ticket" = jackson-json
                "application.core.Venue" = jackson-json
            }
        }
        remote {
            use-unsafe-remote-features-outside-cluster = on
            artery {
                transport = tcp
                canonical.hostname = "127.0.0.1"
                canonical.port = 0
            }
            # log-sent-messages = on
            # log-received-messages = on
        }
    }
}

server {
    # include "common"
    akka {
        log-dead-letters = 5
        log-dead-letters-during-shutdown = off
        # loglevel = "DEBUG"
        actor {
        #   provider = remote
            provider = cluster
            serializers {
                jackson-json = "akka.serialization.jackson.JacksonJsonSerializer"
            }
            serialization-bindings {
                "application.core.Message" = jackson-json
                "application.core.SalesRecord" = jackson-json
                "application.core.Chunk" = jackson-json
                "application.core.Event" = jackson-json
                "application.core.Ticket" = jackson-json
                "application.core.Venue" = jackson-json
            }
        }
        remote {
            use-unsafe-remote-features-outside-cluster = on
            artery {
                transport = tcp
                canonical.hostname = "127.0.0.1"
                canonical.port = 25520
            }
            # log-sent-messages = on
            # log-received-messages = on
        }
    }
    allocation {
        number-of-kiosks = 4
        chunk-size = 1
    }
    token {
        token-id = 100
    }
    naming {
        master-actor-name="master"
        node-actor-name="kiosk"
    }
    events {
        events-file-name="events.json"
    }
}
